use std.io;
use std.data.map;

public {

BLACK: int 		= 30;
RED: int 		= 31;
GREEN: int 		= 32;
YELLOW: int 		= 33;
BLUE: int 		= 34;
MAGENTA: int 		= 35;
CYAN: int 		= 36;
WHITE: int 		= 37;
RESET: int 		= 39;

LIGHTBLACK: int   	= 90;
LIGHTRED: int    	= 91;
LIGHTGREEN: int   	= 92;
LIGHTYELLOW: int  	= 93;
LIGHTBLUE: int    	= 94;
LIGHTMAGENTA: int 	= 95;
LIGHTCYAN: int 		= 96;
LIGHTWHITE: int   	= 97;

}

MAP: map.Map<string, int>;

MAP.set("black": 	BLACK);
MAP.set("red": 		RED);
MAP.set("green": 	GREEN);
MAP.set("yellow": 	YELLOW);
MAP.set("blue": 	BLUE);
MAP.set("magenta": 	MAGENTA);
MAP.set("cyan": 	CYAN);
MAP.set("white": 	WHITE);
MAP.set("reset": 	RESET);
MAP.set("lightblack": 	LIGHTBLACK);
MAP.set("lightred": 	LIGHTRED);
MAP.set("lightgreen": 	LIGHTGREEN);
MAP.set("lightyellow": 	LIGHTYELLOW);
MAP.set("lightblue": 	LIGHTBLUE);
MAP.set("lightmagent": 	LIGHTMAGENT);
MAP.set("lightcyan": 	LIGHTCYAN);
MAP.set("lightwhite": 	LIGHTWHITE);

get_color_number(name: str): int {
	return MAP.get(name);
}

public {

colored(text: str, color: str) {
	return "\x1b[1;" + MAP.get(color) + "m" + text + "\x1b[0m";
}

}
